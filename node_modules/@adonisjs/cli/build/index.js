#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const kleur_1 = require("kleur");
const ace_1 = require("@adonisjs/ace");
const logger_1 = require("./src/Services/logger");
const helpers_1 = require("./src/Services/helpers");
const kernel = new ace_1.Kernel();
const manifest = new ace_1.Manifest(path_1.join(__dirname));
kernel.useManifest(manifest);
kernel.flag('help', (value, _options, command) => {
    if (!value) {
        return;
    }
    logger_1.dumpAsciiLogo();
    kernel.printHelp(command);
    process.exit(0);
}, {});
kernel.flag('version', (value) => {
    if (!value) {
        return;
    }
    logger_1.dumpAsciiLogo();
    console.log(`CLI version:       ${kleur_1.yellow(kleur_1.underline(helpers_1.getCliVersion() || 'NA'))}`);
    console.log(`Framework version: ${kleur_1.yellow(kleur_1.underline(helpers_1.getAdonisCoreVersion(process.cwd()) || 'NA'))}`);
    process.exit(0);
}, {});
kernel
    .handle(process.argv.slice(2))
    .catch((error) => {
    require('./src/Services/exceptionHandler').handleException(error);
    process.exit(1);
});
