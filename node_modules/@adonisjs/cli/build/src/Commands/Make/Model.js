"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const ace_1 = require("@adonisjs/ace");
const helpers_1 = require("../../Services/helpers");
const ResourceBuilder_1 = require("../../Services/ResourceBuilder");
class MakeModel extends ace_1.BaseCommand {
    constructor() {
        super(...arguments);
        this.projectRoot = process.cwd();
    }
    async handle() {
        const rcContents = await helpers_1.getRcContents(this.projectRoot);
        if (!rcContents) {
            this.$error('Make sure your project root has .adonisrc.json file to continue');
            return;
        }
        let modelsPath = 'app/Models';
        Object.keys(rcContents.autoloads).forEach((namespace) => {
            const models = rcContents.namespaces.models;
            if (models && models.startsWith(`${namespace}/`)) {
                const namespacePath = rcContents.autoloads[namespace];
                modelsPath = models.replace(namespace, namespacePath);
            }
        });
        await new ResourceBuilder_1.ResourceBuilder(this.projectRoot, this.name)
            .destinationPath(modelsPath)
            .useTemplate('model.txt', {})
            .make();
    }
}
MakeModel.commandName = 'make:model';
MakeModel.description = 'Make a new Lucid model';
__decorate([
    ace_1.args.string({ description: 'Name of the model' }),
    __metadata("design:type", String)
], MakeModel.prototype, "name", void 0);
exports.default = MakeModel;
