"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const execa_1 = __importDefault(require("execa"));
const helpers_1 = require("./helpers");
class Installer {
    constructor(_projectRoot, _client, _production) {
        this._projectRoot = _projectRoot;
        this._client = _client;
        this._production = _production;
    }
    _npmInstall() {
        const args = this._production ? ['ci', '--production'] : ['install'];
        execa_1.default('npm', args, {
            buffer: false,
            stdio: 'inherit',
            cwd: this._projectRoot,
            env: helpers_1.getChildProcessEnvVariables(this._projectRoot),
        });
    }
    _yarnInstall() {
        const args = this._production ? ['install', '--production'] : ['install'];
        execa_1.default('yarn', args, {
            buffer: false,
            stdio: 'inherit',
            cwd: this._projectRoot,
            env: helpers_1.getChildProcessEnvVariables(this._projectRoot),
        });
    }
    _npmCreate(projectPath, args) {
        execa_1.default('npx', ['create-adonis-ts-app', projectPath].concat(args || []), {
            buffer: false,
            stdio: 'inherit',
            cwd: this._projectRoot,
            env: helpers_1.getChildProcessEnvVariables(this._projectRoot),
        });
    }
    _yarnCreate(projectPath, args) {
        execa_1.default('yarn', ['create', 'adonis-ts-app', projectPath].concat(args || []), {
            buffer: false,
            stdio: 'inherit',
            cwd: this._projectRoot,
            env: helpers_1.getChildProcessEnvVariables(this._projectRoot),
        });
    }
    install() {
        if (this._client === 'yarn') {
            this._yarnInstall();
            return;
        }
        this._npmInstall();
    }
    createApp(projectPath, args) {
        if (this._client === 'yarn') {
            return this._yarnCreate(projectPath, args);
        }
        return this._npmCreate(projectPath, args);
    }
}
exports.Installer = Installer;
