import { PromptContract } from '@poppinss/prompts';
import { Colors, FakeColors } from '@poppinss/colors';
import './src/disableLogger';
/**
 * Returning an instance of colors based upon the env we are in. Since `colors` or
 * `fakeColors` doesn't have side-effects, we can re-use a single instance
 * accross the entire code base
 */
declare const kleur: Colors | FakeColors;
/**
 * Returns a new instance of prompt. Also we lazy load the prompts
 */
declare function getPrompt(): PromptContract;
/**
 * Sharing the sink version, since sink is mainly passed as a reference by
 * the cli
 */
export declare const sinkVersion: string;
export { kleur };
export { kleur as colors };
export { getPrompt };
export { logger } from './src/logger';
export { RcFile } from './src/files/RcFile';
export { isEmptyDir } from './src/isEmptyDir';
export { EnvFile } from './src/files/EnvFile';
export { BaseFile } from './src/base/BaseFile';
export { IniFile } from './src/formats/IniFile';
export { YamlFile } from './src/formats/YamlFile';
export { JsonFile } from './src/formats/JsonFile';
export { LinesFile } from './src/formats/LinesFile';
export { copyTemplates } from './src/copyTemplates';
export { PackageFile } from './src/files/PackageFile';
export { renderMarkdown } from './src/renderMarkdown';
export { KeyValueFile } from './src/base/KeyValueFile';
export { DotTemplate } from './src/formats/DotTemplate';
export { TemplateFile } from './src/formats/TemplateFile';
export { copyFiles, deleteFiles, makeDirs } from 'mrm-core';
export { executeInstructions } from './src/executeInstructions';
